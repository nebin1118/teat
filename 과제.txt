Architecture-소프트웨어의 설계와 업그레이드를 통제하는 지침과 원인입니다(줜나 쉽다)

Frontend-사용자가 볼 수 있는 화면을 뜻한다
프론트엔드의 프로그램은 HTML, CSS, JS 등이 있습니다
프레임워크는 어떤 목적을 달성하기 위해 복잡하게 얽혀있는 문제를 해결하기 위한 구조입니다

Backend-웹 애플리케이션의 사용자가 보지 못하는 영역(서버, 데이터베이스)을 관리하는 기술입니다
백엔드의 프로그램은 JS, Typescript, Nest Js 등이 있습니다

DevOps-소프트웨어 개발 및 인프라 관리 프로세스를 사용하는 조직보다 제품을 더 빠르게 혁신하고 개선할 수 있습니다
RedHat, docker, Dagger 등이 있습니다


git-매우 빠른 속도와 분산형 저장소를 지원하는 버전관리 시스템입니다
GitHub-깃허브는 자신의 코드를 저장, 관리, 공유할 수 있는 저장소입니다
GitHub desktop-깃허브를 클릭 만으로 사용하기 쉽게 해주는 얘입니다
레포-코드의 저장공간(원하는 파일을 저장 관리가능)
클론-깃허브 저장소를 자신의 컴퓨터에 가져오는것(다운로드)
커밋-임시저장(자신의 컴퓨터에서만 저장된다)
푸쉬-업로드(자신의 작업물을 온라인에 업로드한다)
풀-다운로드(다른사람의 작업물을 자신의 컴퓨터로 불러오는 기능이다)
브랜치-여러사람이 함께 작업하기에 코드가 꼬이지 않게하기위해 개인의 작업공간을 나눌 수 있다
풀리퀘-자신의 브랜치 저장사항을 다른 브랜치에 적용 시킨다
머지-다른 브랜치의 작업물을 내 브랜치에 적용 한다